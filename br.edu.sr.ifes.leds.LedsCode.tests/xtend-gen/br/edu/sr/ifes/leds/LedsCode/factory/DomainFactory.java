package br.edu.sr.ifes.leds.LedsCode.factory;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class DomainFactory {
  public static CharSequence domainBlock() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("domain domSincap {");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _moduleBlock = DomainFactory.moduleBlock();
    _builder.append(_moduleBlock, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _moduleBlock2 = DomainFactory.moduleBlock2();
    _builder.append(_moduleBlock2, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence moduleBlock() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("module controleInterno {");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _serviceBlock = DomainFactory.serviceBlock();
    _builder.append(_serviceBlock, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _entityBlock = DomainFactory.entityBlock();
    _builder.append(_entityBlock, "\t");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence moduleBlock2() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("module controleNotificacao {");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _enumBlock = DomainFactory.enumBlock();
    _builder.append(_enumBlock, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _entityBlock2 = DomainFactory.entityBlock2();
    _builder.append(_entityBlock2, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence serviceBlock() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("service aplProcessoNotificacao {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("FindByName => Funcionario.funcionarioRepository.findByName");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("FindNotificadorProcessoNotificacao => controleNotificacao.ProcessoNotificacao.processoNotificacaoRepository.findByNotificadorName");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence entityBlock() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("abstract entity Pessoa{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected String nome");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("abstract entity Funcionario ext Pessoa{");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private String cpf @pk @between(15,15)");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private String telefone @max(11)");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private String email @unique(true) @null(true)");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private String endereco ");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private boolean status");
    _builder.newLine();
    _builder.append("  ");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("repository funcionarioRepository {");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("findByName(String name) : Funcionario");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity AnalistaCNCDO ext Funcionario{}");
    _builder.newLine();
    _builder.append("entity Notificador ext Funcionario{}");
    _builder.newLine();
    _builder.append("entity Captador ext Funcionario{}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("abstract entity Instituicao{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected String nome");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected String endereco");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected List<Funcionario> funcionarios");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity BancoOlhos ext Instituicao{}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("abstract entity InstituicaoNotificadora ext Instituicao{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private BancoOlhos bancoOlhos");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Setor{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String nome");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Hospital ext InstituicaoNotificadora {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String sigla");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String cnes");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Setor setor");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence entityBlock2() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("entity Paciente ext controleInterno.Pessoa{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String numeroProntuario");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String nome");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String numeroSUS");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime dataNascimento");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String sexo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private EstadoCivil estadoCivil");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String nomeMae");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String nacionalidade");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String endereco");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime dataInternacao");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime horaInternacao");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity ResponsavelLegal ext controleInterno.Pessoa{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String nacionalidade");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private EstadoCivil estadoCivil");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String profissao");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private GrauParentesco grauParentesco");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Testemunha ext controleInterno.Pessoa{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String cpf");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String endereco");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Obito {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private controleInterno.Hospital hospital");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private controleInterno.Setor setor");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private controleInterno.Notificador notificador");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Paciente paciente");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Entrevista {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean entrevistaRealizada");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean doacaoAutorizado");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime dataRealizacao");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime horaRealizacao");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<Testemunha> testemunhas");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<ResponsavelLegal> responsavel");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private controleInterno.Funcionario notificador");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity Captacao {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean captacaoRealizada");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Datetime dataRealizacao");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private controleInterno.Captador captador");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity CausaNaoDoacao {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String descricao");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("entity ProcessoNotificacao{");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private String codigo");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Datetime dataCriacao");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Datetime horaCriacao");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Datetime dataFinalizacao");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Datetime horaFinalizacao");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private controleInterno.Funcionario notificador");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private boolean arquivado");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Obito obito");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Entrevista entrevista");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private Captacao captacao");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private CausaNaoDoacao causa");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("private AnalistaCNCDO analista");
    _builder.newLine();
    _builder.append("  ");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("repository processoNotificacaoRepository {");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("findByNotificadorName(String notificador) : Funcionario");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public static CharSequence enumBlock() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("enum EstadoCivil {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Casado, Solteiro, Viuvo");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("enum GrauParentesco {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Irmao, Pai, Mae, Avos");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}

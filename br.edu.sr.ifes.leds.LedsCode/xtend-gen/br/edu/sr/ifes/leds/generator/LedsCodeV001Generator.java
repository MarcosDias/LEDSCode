/**
 * generated by Xtext
 */
package br.edu.sr.ifes.leds.generator;

import br.edu.sr.ifes.leds.generator.ProjectConverter;
import br.edu.sr.ifes.leds.ledsCodeV001.Project;
import br.edu.sr.ifes.leds.model.mainLayer.TableObjects;
import br.edu.sr.ifes.leds.springroo.ctrl.SpringRooCtrl;
import com.google.common.collect.Iterables;
import com.google.inject.Inject;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class LedsCodeV001Generator implements IGenerator {
  @Inject
  @Extension
  private IQualifiedNameProvider _iQualifiedNameProvider;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    ProjectConverter conversor = new ProjectConverter();
    SpringRooCtrl springRooConversor = new SpringRooCtrl();
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_allContents);
    Iterable<Project> _filter = Iterables.<Project>filter(_iterable, Project.class);
    Project projectLang = IterableExtensions.<Project>head(_filter);
    TableObjects metaModelo = conversor.convert(projectLang);
    String scriptProject = springRooConversor.createProject(metaModelo);
    br.edu.sr.ifes.leds.model.mainLayer.Project _project = metaModelo.getProject();
    String _name = _project.getName();
    String _plus = (("Spring_Roo" + "-") + _name);
    String _plus_1 = (_plus + ".roo");
    fsa.generateFile(_plus_1, scriptProject);
  }
}

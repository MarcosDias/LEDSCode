// Para um mesmo projeto temos mais de uma aplicação e para uma mesma aplicação temos mais de uma interface


Project Library{

	interface Library  {
    
		//Cria as telas da aplicação Library
		HtmlView Library
	
		//Criar um webservice do application Library
		ResFull Library	
	}

	interface LibraryService  {
    
		//Criar um webservice do application LibraryService
		ResFull LibraryService	
	}


	Infrastructure {

		basePackage = org.library
	
		projectVersion = 0.0.0
	
		language {nome: valor, versao:valor}
	
		framework {chave: valor, }
	
		orm {nome: valor, versao }
	
		devdatabase {url: valor, }

	}


Application Library{
    
    ComposedBy Library.*  (tem acesso a todos os serviços e entidades do dominio .. não tem acesso aos repositórios)
	ComposedBy Loan.* 
}

Application LibraryPerson{

    // Tem acesso apenas aos elemento do modulo person
	ComposedBy Library.Person.*  (tem acesso a todos os serviços e entidades do dominio .. não tem acesso aos repositórios)

}



Application LibraryService{

	ComposedBy Library.LibraryService  (tem acesso apenas ao serviço LibraryService)

}


Domain Loan {

	import Library.*

	Module X{
	}
	Modulo Y {
	}


}

Domain Library {
  
    
  Module media {
    
    Service LibraryService {
      findLibraryByName => LibraryRepository.findLibraryByName;
      findMediaByName => MediaRepository.findMediaByName;
      findMediaByCharacter => MediaRepository.findMediaByCharacter;
      findPersonByName => PersonService.findPersonByName;
    }
    
    Entity Library {
      String name key
      Set<PhysicalMedia> media
    
      Repository LibraryRepository {
        Library findLibraryByName(String name) throws LibraryNotFoundException;
      }
    }
    
    Entity PhysicalMedia {
      String status length="3"
      String location
      Library library nullable
      Set<@Media> media
    }
    
    Service MediaService {
      findAll => MediaRepository.findAll;
    }
    
    abstract Entity Media {
      String title
      Set<PhysicalMedia> physicalMedia
      Set<Engagement> engagements
      Set<MediaCharacter> mediaCharacters
    
      Repository MediaRepository {

        List<Media> findMediaByCharacter(String characterName);
        findById;
        save;
        findAll;
        List<Media> findMediaByName(Long libraryId, String name);
      }
    }
    
    Entity Book extends Media {
      !auditable
      String isbn key length="20"
    }
    
    Entity Movie extends Media {
      !auditable
      String urlIMDB key
      Integer playLength
      Genre category nullable
    }
    
    enum Genre {
      ACTION,
      COMEDY,
      DRAMA,
      SCI_FI
    }
    
      
    Service MediaCharacterService {
      findAll => MediaCharacterRepository.findAll;
    }
    
   }
    
  Module person {
    Service PersonService {
      findPersonByName => PersonRepository.findPersonByName;
    }
    
    Entity Person {
      Date birthDate past
      Gender sex !changeable
      Ssn ssn key
      
      Repository PersonRepository {
        List<Person> findPersonByName(String name);
        save;
        findByExample;
        findByKeys;
      }
    }
    
    
    enum Gender {
      FEMALE("F"),
      MALE("M")
    }
  }
}
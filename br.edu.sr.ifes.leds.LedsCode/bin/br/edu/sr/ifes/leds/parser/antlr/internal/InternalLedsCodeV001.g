/*
 * generated by Xtext
 */
grammar InternalLedsCodeV001;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package br.edu.sr.ifes.leds.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.edu.sr.ifes.leds.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.edu.sr.ifes.leds.services.LedsCodeV001GrammarAccess;

}

@parser::members {

 	private LedsCodeV001GrammarAccess grammarAccess;
 	
    public InternalLedsCodeV001Parser(TokenStream input, LedsCodeV001GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LedsCodeDSL";	
   	}
   	
   	@Override
   	protected LedsCodeV001GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLedsCodeDSL
entryRuleLedsCodeDSL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLedsCodeDSLRule()); }
	 iv_ruleLedsCodeDSL=ruleLedsCodeDSL 
	 { $current=$iv_ruleLedsCodeDSL.current; } 
	 EOF 
;

// Rule LedsCodeDSL
ruleLedsCodeDSL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getLedsCodeDSLAccess().getProjectProjectParserRuleCall_0()); 
	    }
		lv_project_0_0=ruleProject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLedsCodeDSLRule());
	        }
       		add(
       			$current, 
       			"project",
        		lv_project_0_0, 
        		"Project");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	 iv_ruleProject=ruleProject 
	 { $current=$iv_ruleProject.current; } 
	 EOF 
;

// Rule Project
ruleProject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='project' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProjectAccess().getProjectKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getInfrastructureBlockInfrastructureBlockParserRuleCall_3_0()); 
	    }
		lv_infrastructureBlock_3_0=ruleInfrastructureBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"infrastructureBlock",
        		lv_infrastructureBlock_3_0, 
        		"InfrastructureBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getInterfaceBlockInterfaceBlockParserRuleCall_4_0()); 
	    }
		lv_interfaceBlock_4_0=ruleInterfaceBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"interfaceBlock",
        		lv_interfaceBlock_4_0, 
        		"InterfaceBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getApplicationBlockApplicationBlockParserRuleCall_5_0()); 
	    }
		lv_applicationBlock_5_0=ruleApplicationBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		add(
       			$current, 
       			"applicationBlock",
        		lv_applicationBlock_5_0, 
        		"ApplicationBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getDomainBlockDomainBlockParserRuleCall_6_0()); 
	    }
		lv_domainBlock_6_0=ruleDomainBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		add(
       			$current, 
       			"domainBlock",
        		lv_domainBlock_6_0, 
        		"DomainBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleInterfaceBlock
entryRuleInterfaceBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceBlockRule()); }
	 iv_ruleInterfaceBlock=ruleInterfaceBlock 
	 { $current=$iv_ruleInterfaceBlock.current; } 
	 EOF 
;

// Rule InterfaceBlock
ruleInterfaceBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='interface' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInterfaceBlockAccess().getInterfaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInterfaceBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceBlockAccess().getInterfaceApplicationInterfaceApplicationParserRuleCall_3_0()); 
	    }
		lv_interfaceApplication_3_0=ruleInterfaceApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceBlockRule());
	        }
       		add(
       			$current, 
       			"interfaceApplication",
        		lv_interfaceApplication_3_0, 
        		"InterfaceApplication");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleInterfaceApplication
entryRuleInterfaceApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceApplicationRule()); }
	 iv_ruleInterfaceApplication=ruleInterfaceApplication 
	 { $current=$iv_ruleInterfaceApplication.current; } 
	 EOF 
;

// Rule InterfaceApplication
ruleInterfaceApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_type_0_1=	'HtmlView' 
    {
        newLeafNode(lv_type_0_1, grammarAccess.getInterfaceApplicationAccess().getTypeHtmlViewKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceApplicationRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_1, null);
	    }

    |		lv_type_0_2=	'RestFull' 
    {
        newLeafNode(lv_type_0_2, grammarAccess.getInterfaceApplicationAccess().getTypeRestFullKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceApplicationRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_2, null);
	    }

)

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInterfaceApplicationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceApplicationAccess().getEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		lv_nameApp_3_0=RULE_ID
		{
			newLeafNode(lv_nameApp_3_0, grammarAccess.getInterfaceApplicationAccess().getNameAppIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameApp",
        		lv_nameApp_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleInfrastructureBlock
entryRuleInfrastructureBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfrastructureBlockRule()); }
	 iv_ruleInfrastructureBlock=ruleInfrastructureBlock 
	 { $current=$iv_ruleInfrastructureBlock.current; } 
	 EOF 
;

// Rule InfrastructureBlock
ruleInfrastructureBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='infrastructure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfrastructureBlockAccess().getInfrastructureKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='basePackage' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInfrastructureBlockAccess().getBasePackageKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_basePackage_4_0=RULE_STRING
		{
			newLeafNode(lv_basePackage_4_0, grammarAccess.getInfrastructureBlockAccess().getBasePackageSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfrastructureBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"basePackage",
        		lv_basePackage_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='projectVersion' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInfrastructureBlockAccess().getProjectVersionKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_6());
    }
(
(
		lv_projectVersion_7_0=RULE_STRING
		{
			newLeafNode(lv_projectVersion_7_0, grammarAccess.getInfrastructureBlockAccess().getProjectVersionSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfrastructureBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"projectVersion",
        		lv_projectVersion_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='language' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInfrastructureBlockAccess().getLanguageKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_9());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfrastructureBlockAccess().getLanguageNameVersionParserRuleCall_11_0()); 
	    }
		lv_language_11_0=ruleNameVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfrastructureBlockRule());
	        }
       		set(
       			$current, 
       			"language",
        		lv_language_11_0, 
        		"NameVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_12());
    }
	otherlv_13='framework' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInfrastructureBlockAccess().getFrameworkKeyword_13());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_14());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_15());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfrastructureBlockAccess().getFrameworkNameVersionParserRuleCall_16_0()); 
	    }
		lv_framework_16_0=ruleNameVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfrastructureBlockRule());
	        }
       		set(
       			$current, 
       			"framework",
        		lv_framework_16_0, 
        		"NameVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_17());
    }
	otherlv_18='orm' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInfrastructureBlockAccess().getOrmKeyword_18());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_19());
    }
	otherlv_20='{' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_20());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfrastructureBlockAccess().getOrmNameVersionParserRuleCall_21_0()); 
	    }
		lv_orm_21_0=ruleNameVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfrastructureBlockRule());
	        }
       		set(
       			$current, 
       			"orm",
        		lv_orm_21_0, 
        		"NameVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_22());
    }
	otherlv_23='database' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getInfrastructureBlockAccess().getDatabaseKeyword_23());
    }
	otherlv_24='=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_24());
    }
	otherlv_25='{' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_25());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfrastructureBlockAccess().getDatabaseDatabaseParserRuleCall_26_0()); 
	    }
		lv_database_26_0=ruleDatabase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfrastructureBlockRule());
	        }
       		set(
       			$current, 
       			"database",
        		lv_database_26_0, 
        		"Database");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_27='}' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_27());
    }
	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_28());
    }
)
;





// Entry rule entryRuleDatabase
entryRuleDatabase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseRule()); }
	 iv_ruleDatabase=ruleDatabase 
	 { $current=$iv_ruleDatabase.current; } 
	 EOF 
;

// Rule Database
ruleDatabase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatabaseAccess().getVersionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDatabaseAccess().getColonKeyword_1());
    }
(
(
		lv_versionValue_2_0=RULE_STRING
		{
			newLeafNode(lv_versionValue_2_0, grammarAccess.getDatabaseAccess().getVersionValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"versionValue",
        		lv_versionValue_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDatabaseAccess().getCommaKeyword_3());
    }
	otherlv_4='@name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDatabaseAccess().getNameKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDatabaseAccess().getColonKeyword_5());
    }
(
(
		lv_nameValue_6_0=RULE_STRING
		{
			newLeafNode(lv_nameValue_6_0, grammarAccess.getDatabaseAccess().getNameValueSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameValue",
        		lv_nameValue_6_0, 
        		"STRING");
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDatabaseAccess().getCommaKeyword_7());
    }
	otherlv_8='@user' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDatabaseAccess().getUserKeyword_8());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDatabaseAccess().getColonKeyword_9());
    }
(
(
		lv_userValue_10_0=RULE_STRING
		{
			newLeafNode(lv_userValue_10_0, grammarAccess.getDatabaseAccess().getUserValueSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"userValue",
        		lv_userValue_10_0, 
        		"STRING");
	    }

)
)	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDatabaseAccess().getCommaKeyword_11());
    }
	otherlv_12='@pass' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDatabaseAccess().getPassKeyword_12());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDatabaseAccess().getColonKeyword_13());
    }
(
(
		lv_passValue_14_0=RULE_STRING
		{
			newLeafNode(lv_passValue_14_0, grammarAccess.getDatabaseAccess().getPassValueSTRINGTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"passValue",
        		lv_passValue_14_0, 
        		"STRING");
	    }

)
)	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDatabaseAccess().getCommaKeyword_15());
    }
	otherlv_16='@host' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDatabaseAccess().getHostKeyword_16());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDatabaseAccess().getColonKeyword_17());
    }
(
(
		lv_hostValue_18_0=RULE_STRING
		{
			newLeafNode(lv_hostValue_18_0, grammarAccess.getDatabaseAccess().getHostValueSTRINGTerminalRuleCall_18_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hostValue",
        		lv_hostValue_18_0, 
        		"STRING");
	    }

)
)	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDatabaseAccess().getCommaKeyword_19());
    }
	otherlv_20='@env' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDatabaseAccess().getEnvKeyword_20());
    }
	otherlv_21=':' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDatabaseAccess().getColonKeyword_21());
    }
(
(
		lv_envValue_22_0=RULE_STRING
		{
			newLeafNode(lv_envValue_22_0, grammarAccess.getDatabaseAccess().getEnvValueSTRINGTerminalRuleCall_22_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"envValue",
        		lv_envValue_22_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleNameVersion
entryRuleNameVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameVersionRule()); }
	 iv_ruleNameVersion=ruleNameVersion 
	 { $current=$iv_ruleNameVersion.current; } 
	 EOF 
;

// Rule NameVersion
ruleNameVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNameVersionAccess().getNameKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNameVersionAccess().getColonKeyword_1());
    }
(
(
		lv_nameValue_2_0=RULE_STRING
		{
			newLeafNode(lv_nameValue_2_0, grammarAccess.getNameVersionAccess().getNameValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameValue",
        		lv_nameValue_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNameVersionAccess().getCommaKeyword_3());
    }
	otherlv_4='@version' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNameVersionAccess().getVersionKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNameVersionAccess().getColonKeyword_5());
    }
(
(
		lv_versionValue_6_0=RULE_STRING
		{
			newLeafNode(lv_versionValue_6_0, grammarAccess.getNameVersionAccess().getVersionValueSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"versionValue",
        		lv_versionValue_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleApplicationBlock
entryRuleApplicationBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationBlockRule()); }
	 iv_ruleApplicationBlock=ruleApplicationBlock 
	 { $current=$iv_ruleApplicationBlock.current; } 
	 EOF 
;

// Rule ApplicationBlock
ruleApplicationBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='application' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getApplicationBlockAccess().getApplicationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getApplicationBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getApplicationBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getApplicationBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='composedBy' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getApplicationBlockAccess().getComposedByKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationBlockAccess().getApplicationDomainImportCompoundNameParserRuleCall_3_1_0()); 
	    }
		lv_applicationDomain_4_0=ruleImportCompoundName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationBlockRule());
	        }
       		add(
       			$current, 
       			"applicationDomain",
        		lv_applicationDomain_4_0, 
        		"ImportCompoundName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getApplicationBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDomainBlock
entryRuleDomainBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainBlockRule()); }
	 iv_ruleDomainBlock=ruleDomainBlock 
	 { $current=$iv_ruleDomainBlock.current; } 
	 EOF 
;

// Rule DomainBlock
ruleDomainBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='domain' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDomainBlockAccess().getDomainKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDomainBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDomainBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDomainBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainBlockAccess().getModuleModuleBlockParserRuleCall_3_0()); 
	    }
		lv_module_3_0=ruleModuleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainBlockRule());
	        }
       		add(
       			$current, 
       			"module",
        		lv_module_3_0, 
        		"ModuleBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDomainBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleModuleBlock
entryRuleModuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleBlockRule()); }
	 iv_ruleModuleBlock=ruleModuleBlock 
	 { $current=$iv_ruleModuleBlock.current; } 
	 EOF 
;

// Rule ModuleBlock
ruleModuleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleBlockAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModuleBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModuleBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModuleBlockAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModuleBlockAccess().getEnumBlockEnumBlockParserRuleCall_3_0_0()); 
	    }
		lv_enumBlock_3_0=ruleEnumBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleBlockRule());
	        }
       		add(
       			$current, 
       			"enumBlock",
        		lv_enumBlock_3_0, 
        		"EnumBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleBlockAccess().getEntityBlockEntityBlockParserRuleCall_3_1_0()); 
	    }
		lv_entityBlock_4_0=ruleEntityBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleBlockRule());
	        }
       		add(
       			$current, 
       			"entityBlock",
        		lv_entityBlock_4_0, 
        		"EntityBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleBlockAccess().getServiceBlockServiceBlockParserRuleCall_3_2_0()); 
	    }
		lv_serviceBlock_5_0=ruleServiceBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleBlockRule());
	        }
       		add(
       			$current, 
       			"serviceBlock",
        		lv_serviceBlock_5_0, 
        		"ServiceBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModuleBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleServiceBlock
entryRuleServiceBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceBlockRule()); }
	 iv_ruleServiceBlock=ruleServiceBlock 
	 { $current=$iv_ruleServiceBlock.current; } 
	 EOF 
;

// Rule ServiceBlock
ruleServiceBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='service' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceBlockAccess().getServiceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getServiceBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceBlockAccess().getServiceFieldsServiceMethodParserRuleCall_3_0()); 
	    }
		lv_serviceFields_3_0=ruleServiceMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceBlockRule());
	        }
       		add(
       			$current, 
       			"serviceFields",
        		lv_serviceFields_3_0, 
        		"ServiceMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getServiceBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleServiceMethod
entryRuleServiceMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceMethodRule()); }
	 iv_ruleServiceMethod=ruleServiceMethod 
	 { $current=$iv_ruleServiceMethod.current; } 
	 EOF 
;

// Rule ServiceMethod
ruleServiceMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getServiceMethodAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceMethodAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceMethodRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getServiceMethodAccess().getMethodAcessRepositoryFieldsCrossReference_2_0()); 
	    }
		ruleCompoundName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEntityBlock
entryRuleEntityBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityBlockRule()); }
	 iv_ruleEntityBlock=ruleEntityBlock 
	 { $current=$iv_ruleEntityBlock.current; } 
	 EOF 
;

// Rule EntityBlock
ruleEntityBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEntityBlockAccess().getAcessModifierAccessModifierParserRuleCall_0_0()); 
	    }
		lv_acessModifier_0_0=ruleAccessModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityBlockRule());
	        }
       		set(
       			$current, 
       			"acessModifier",
        		lv_acessModifier_0_0, 
        		"AccessModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_isAbstract_1_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_1_0, grammarAccess.getEntityBlockAccess().getIsAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityBlockRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_2='entity' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityBlockAccess().getEntityKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getEntityBlockAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityBlockAccess().getClassExtendsExtendBlockParserRuleCall_4_0()); 
	    }
		lv_classExtends_4_0=ruleExtendBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityBlockRule());
	        }
       		set(
       			$current, 
       			"classExtends",
        		lv_classExtends_4_0, 
        		"ExtendBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityBlockAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityBlockAccess().getAttributesAttributeParserRuleCall_6_0()); 
	    }
		lv_attributes_6_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityBlockRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_6_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityBlockAccess().getRepositoryRepositoryParserRuleCall_7_0()); 
	    }
		lv_repository_7_0=ruleRepository		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityBlockRule());
	        }
       		set(
       			$current, 
       			"repository",
        		lv_repository_7_0, 
        		"Repository");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEntityBlockAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getAcessModifierAccessModifierParserRuleCall_0_0()); 
	    }
		lv_acessModifier_0_0=ruleAccessModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"acessModifier",
        		lv_acessModifier_0_0, 
        		"AccessModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeDataTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)((
(
		lv_pk_3_0=	'@pk' 
    {
        newLeafNode(lv_pk_3_0, grammarAccess.getAttributeAccess().getPkPkKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "pk", true, "@pk");
	    }

)
)
    |((	otherlv_4='@unique' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getUniqueKeyword_3_1_0());
    }
)+	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getUniqueBOOLEANParserRuleCall_3_1_2_0()); 
	    }
		lv_unique_6_0=ruleBOOLEAN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"unique",
        		lv_unique_6_0, 
        		"BOOLEAN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_3_1_3());
    }
)
    |((	otherlv_8='@null' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getNullKeyword_3_2_0());
    }
)+	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_3_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getNullableBOOLEANParserRuleCall_3_2_2_0()); 
	    }
		lv_nullable_10_0=ruleBOOLEAN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"nullable",
        		lv_nullable_10_0, 
        		"BOOLEAN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_3_2_3());
    }
)
    |((	otherlv_12='@min' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getMinKeyword_3_3_0());
    }
)+	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_3_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMinINTEGERParserRuleCall_3_3_2_0()); 
	    }
		lv_min_14_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_14_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_3_3_3());
    }
)
    |((	otherlv_16='@max' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getAttributeAccess().getMaxKeyword_3_4_0());
    }
)+	otherlv_17='(' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_3_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMaxINTEGERParserRuleCall_3_4_2_0()); 
	    }
		lv_max_18_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_18_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_3_4_3());
    }
)
    |((	otherlv_20='@between' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getAttributeAccess().getBetweenKeyword_3_5_0());
    }
)+	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_3_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMinINTEGERParserRuleCall_3_5_2_0()); 
	    }
		lv_min_22_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_22_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getAttributeAccess().getCommaKeyword_3_5_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMaxINTEGERParserRuleCall_3_5_4_0()); 
	    }
		lv_max_24_0=ruleINTEGER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_24_0, 
        		"INTEGER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_3_5_5());
    }
))*)
;





// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	 iv_ruleRepository=ruleRepository 
	 { $current=$iv_ruleRepository.current; } 
	 EOF 
;

// Rule Repository
ruleRepository returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='repository' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getRepositoryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepositoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRepositoryAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepositoryAccess().getMethodsRepositoryFieldsParserRuleCall_3_0()); 
	    }
		lv_methods_3_0=ruleRepositoryFields		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepositoryRule());
	        }
       		add(
       			$current, 
       			"methods",
        		lv_methods_3_0, 
        		"RepositoryFields");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRepositoryAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRepositoryFields
entryRuleRepositoryFields returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepositoryFieldsRule()); }
	 iv_ruleRepositoryFields=ruleRepositoryFields 
	 { $current=$iv_ruleRepositoryFields.current; } 
	 EOF 
;

// Rule RepositoryFields
ruleRepositoryFields returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRepositoryFieldsAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepositoryFieldsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRepositoryFieldsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepositoryFieldsAccess().getMethodsParametersMethodParameterParserRuleCall_2_0()); 
	    }
		lv_methodsParameters_2_0=ruleMethodParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepositoryFieldsRule());
	        }
       		set(
       			$current, 
       			"methodsParameters",
        		lv_methodsParameters_2_0, 
        		"MethodParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepositoryFieldsAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRepositoryFieldsAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepositoryFieldsAccess().getReturnTypeDataTypeParserRuleCall_5_0()); 
	    }
		lv_returnType_5_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepositoryFieldsRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_5_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumBlock
entryRuleEnumBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumBlockRule()); }
	 iv_ruleEnumBlock=ruleEnumBlock 
	 { $current=$iv_ruleEnumBlock.current; } 
	 EOF 
;

// Rule EnumBlock
ruleEnumBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumBlockAccess().getEnumKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_values_3_0=RULE_ID
		{
			newLeafNode(lv_values_3_0, grammarAccess.getEnumBlockAccess().getValuesIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumBlockRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumBlockAccess().getCommaKeyword_4_0());
    }
(
(
		lv_values_5_0=RULE_ID
		{
			newLeafNode(lv_values_5_0, grammarAccess.getEnumBlockAccess().getValuesIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumBlockRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"ID");
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumBlockAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); } 
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current.getText(); }  
	 EOF 
;

// Rule DataType
ruleDataType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getDataTypeListParserRuleCall_0()); 
    }
    this_DataTypeList_0=ruleDataTypeList    {
		$current.merge(this_DataTypeList_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getDataTypeSetParserRuleCall_1()); 
    }
    this_DataTypeSet_1=ruleDataTypeSet    {
		$current.merge(this_DataTypeSet_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getCompoundNameParserRuleCall_2()); 
    }
    this_CompoundName_2=ruleCompoundName    {
		$current.merge(this_CompoundName_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='String' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getStringKeyword_3()); 
    }

    |
	kw='int' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getIntKeyword_4()); 
    }

    |
	kw='Integer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getIntegerKeyword_5()); 
    }

    |
	kw='long' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getLongKeyword_6()); 
    }

    |
	kw='Long' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getLongKeyword_7()); 
    }

    |
	kw='boolean' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getBooleanKeyword_8()); 
    }

    |
	kw='Boolean' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getBooleanKeyword_9()); 
    }

    |
	kw='Datetime' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getDatetimeKeyword_10()); 
    }

    |
	kw='double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getDoubleKeyword_11()); 
    }

    |
	kw='Double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getDoubleKeyword_12()); 
    }

    |
	kw='float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getFloatKeyword_13()); 
    }

    |
	kw='Float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getFloatKeyword_14()); 
    }

    |
	kw='Object' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeAccess().getObjectKeyword_15()); 
    }
)
    ;





// Entry rule entryRuleMethodParameter
entryRuleMethodParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodParameterRule()); }
	 iv_ruleMethodParameter=ruleMethodParameter 
	 { $current=$iv_ruleMethodParameter.current; } 
	 EOF 
;

// Rule MethodParameter
ruleMethodParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodParameterAccess().getTypeAndAttrTypeAndAttributeParserRuleCall_0_0()); 
	    }
		lv_typeAndAttr_0_0=ruleTypeAndAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodParameterRule());
	        }
       		add(
       			$current, 
       			"typeAndAttr",
        		lv_typeAndAttr_0_0, 
        		"TypeAndAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMethodParameterAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodParameterAccess().getTypeAndAttrTypeAndAttributeParserRuleCall_1_1_0()); 
	    }
		lv_typeAndAttr_2_0=ruleTypeAndAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodParameterRule());
	        }
       		add(
       			$current, 
       			"typeAndAttr",
        		lv_typeAndAttr_2_0, 
        		"TypeAndAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTypeAndAttribute
entryRuleTypeAndAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeAndAttributeRule()); }
	 iv_ruleTypeAndAttribute=ruleTypeAndAttribute 
	 { $current=$iv_ruleTypeAndAttribute.current; } 
	 EOF 
;

// Rule TypeAndAttribute
ruleTypeAndAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAndAttributeAccess().getTypeDataTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeAndAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeAndAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeAndAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleExtendBlock
entryRuleExtendBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtendBlockRule()); }
	 iv_ruleExtendBlock=ruleExtendBlock 
	 { $current=$iv_ruleExtendBlock.current; } 
	 EOF 
;

// Rule ExtendBlock
ruleExtendBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExtendBlockAccess().getExtendParserRuleCall_0()); 
    }
ruleExtend
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtendBlockRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtendBlockAccess().getValuesEntityBlockCrossReference_1_0()); 
	    }
		ruleCompoundName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtendBlockAccess().getCommaKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtendBlockRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtendBlockAccess().getValuesEntityBlockCrossReference_2_1_0()); 
	    }
		ruleCompoundName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleExtend
entryRuleExtend returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtendRule()); } 
	 iv_ruleExtend=ruleExtend 
	 { $current=$iv_ruleExtend.current.getText(); }  
	 EOF 
;

// Rule Extend
ruleExtend returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExtendAccess().getColonKeyword_0()); 
    }

    |
	kw='extends' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExtendAccess().getExtendsKeyword_1()); 
    }

    |
	kw='ext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExtendAccess().getExtKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleDataTypeList
entryRuleDataTypeList returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeListRule()); } 
	 iv_ruleDataTypeList=ruleDataTypeList 
	 { $current=$iv_ruleDataTypeList.current.getText(); }  
	 EOF 
;

// Rule DataTypeList
ruleDataTypeList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='List' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeListAccess().getListKeyword_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeListAccess().getLessThanSignKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getDataTypeListAccess().getDataTypeParserRuleCall_2()); 
    }
    this_DataType_2=ruleDataType    {
		$current.merge(this_DataType_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeListAccess().getGreaterThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleDataTypeSet
entryRuleDataTypeSet returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeSetRule()); } 
	 iv_ruleDataTypeSet=ruleDataTypeSet 
	 { $current=$iv_ruleDataTypeSet.current.getText(); }  
	 EOF 
;

// Rule DataTypeSet
ruleDataTypeSet returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Set' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeSetAccess().getSetKeyword_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeSetAccess().getLessThanSignKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getDataTypeSetAccess().getDataTypeParserRuleCall_2()); 
    }
    this_DataType_2=ruleDataType    {
		$current.merge(this_DataType_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDataTypeSetAccess().getGreaterThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleAccessModifier
entryRuleAccessModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessModifierRule()); } 
	 iv_ruleAccessModifier=ruleAccessModifier 
	 { $current=$iv_ruleAccessModifier.current.getText(); }  
	 EOF 
;

// Rule AccessModifier
ruleAccessModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAccessModifierAccess().getPrivateParserRuleCall_0()); 
    }
    this_Private_0=rulePrivate    {
		$current.merge(this_Private_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAccessModifierAccess().getProtectedParserRuleCall_1()); 
    }
    this_Protected_1=ruleProtected    {
		$current.merge(this_Protected_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRulePrivate
entryRulePrivate returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrivateRule()); } 
	 iv_rulePrivate=rulePrivate 
	 { $current=$iv_rulePrivate.current.getText(); }  
	 EOF 
;

// Rule Private
rulePrivate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrivateAccess().getPrivateKeyword()); 
    }

    ;





// Entry rule entryRuleProtected
entryRuleProtected returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtectedRule()); } 
	 iv_ruleProtected=ruleProtected 
	 { $current=$iv_ruleProtected.current.getText(); }  
	 EOF 
;

// Rule Protected
ruleProtected returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getProtectedAccess().getProtectedKeyword()); 
    }

    ;





// Entry rule entryRuleImportCompoundName
entryRuleImportCompoundName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportCompoundNameRule()); } 
	 iv_ruleImportCompoundName=ruleImportCompoundName 
	 { $current=$iv_ruleImportCompoundName.current.getText(); }  
	 EOF 
;

// Rule ImportCompoundName
ruleImportCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImportCompoundNameAccess().getCompoundNameParserRuleCall_0()); 
    }
    this_CompoundName_0=ruleCompoundName    {
		$current.merge(this_CompoundName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportCompoundNameAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleCompoundName
entryRuleCompoundName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompoundNameRule()); } 
	 iv_ruleCompoundName=ruleCompoundName 
	 { $current=$iv_ruleCompoundName.current.getText(); }  
	 EOF 
;

// Rule CompoundName
ruleCompoundName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCompoundNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); } 
	 iv_ruleBOOLEAN=ruleBOOLEAN 
	 { $current=$iv_ruleBOOLEAN.current.getText(); }  
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleINTEGER
entryRuleINTEGER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getINTEGERRule()); } 
	 iv_ruleINTEGER=ruleINTEGER 
	 { $current=$iv_ruleINTEGER.current.getText(); }  
	 EOF 
;

// Rule INTEGER
ruleINTEGER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getINTEGERAccess().getINTTerminalRuleCall()); 
    }
)+
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



grammar br.edu.sr.ifes.leds.LedsCodeV001 with org.eclipse.xtext.common.Terminals

generate ledsCodeV001 "http://www.edu.br/sr/ifes/leds/LedsCodeV001"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

LedsCodeDSL:
	project+=Project;

Project:
	'project' name=ID '{'
		infrastructureBlock=InfrastructureBlock
		(interfaceBlock=InterfaceBlock)? 
		(appBlock+=ApplicationBlock)*
		(domainBlock+=DomainBlock)+
		
	'}'
;
	
InterfaceBlock: 
	'interface' name=ID '{'
		(interfaceApplication+= InterfaceApplication)*
	'}'
;

InterfaceApplication:
	type=('HtmlView'|'RestFull') name=ID '=>' nameApp= ID
;


InfrastructureBlock:
	'infrastructure' '{'
		'basePackage' '=' basePackage=CompoundName
		'projectVersion' '=' projectVersion=CompoundVersion
		'language' '=' '{' language=NameVersion '}'
		'framework' '=' '{' framework=NameVersion '}'
		'orm' '=' '{' orm=NameVersion '}'
		'database' '=' '{' database=DatabaseBlock '}'
	'}'
;

DatabaseBlock:
	'@version' ':' versionValue=STRING ',' 
	'@name' ':' nameValue=STRING ',' 
	'@user' ':' userValue=STRING ','
	'@pass' ':' passValue=STRING ','
	'@host' ':' hostValue=STRING
;

/*
 * É muito provavel que essa regra sofrerá algumas alteracoes no futuro,
 * tendo em vista que ela está sendo usado em 
 * tres locais diferentes e com semanticas diferentes.
 */
NameVersion:
	'@name' ':' nameValue=STRING ','
	'@version' ':' versionValue=STRING
;


ApplicationBlock:
	'application' ID '{'
		('composedBy' ImportCompoundName)*	
	'}'
;

DomainBlock:
	'domain' ID '{'
		ModuleBlock*
	'}'
;

ModuleBlock:
	'module' ID '{'
		(ServiceBlock|EntityBlock|EnumBlock)*
	'}'
;

ServiceBlock:
	'service' ID '{'
		(ID '=>' CompoundName)*
	'}'
;

EntityBlock:
	(AccessModifier)? ('abstract')? 'entity' ID (ExtendBlock)? (ImplementBlock)?  '{'
		((AccessModifier)? DataType ID)*
		
		RepositoryBlock?
	'}' 
;

RepositoryBlock:
	'repository' ID '{'
		(ID'('MethodParameter')' ':' DataType)*	
	'}'
;

EnumBlock:
	'enum' ID '{'
		ID (',' ID)*
	'}'
;

DataType:
	(DataTypeList|DataTypeSet|CompoundName|'String'|'int'|'Integer'|'long'|'Long'|'boolean'|'Boolean'|'DateTime'|
  	'double'|'Double'|'float'|'Float'|'Object')
;
MethodParameter: DataType ID (',' DataType ID)*;
KeyValue: ID ':' ID;
ExtendBlock: Extend CompoundName;
Extend: 'extend'|'ext'|':';
ImplementBlock: Implement CompoundName (',' CompoundName)*;
Implement: 'implement'|'imp'|'>' ;
DataTypeList: 'List''<'ID'>';
DataTypeSet: 'Set''<'ID'>';
AccessModifier: (Private|Protected);
Private:'-';
Protected:'#';
ImportCompoundName: CompoundName('.*'?);
CompoundName: ID('.'ID)*;
CompoundVersion: INT('.'INT)*;

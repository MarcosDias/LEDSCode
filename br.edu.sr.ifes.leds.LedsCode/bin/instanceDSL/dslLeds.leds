project Library{
	infrastructure{
		basePackage = "org.company.exempla"
		projectVersion = "0.0.0"
		language = {@name: "Java", @version: "8"}
		framework = {@name: "SpringRoo", @version: "1.2"}
		orm = {@name: "Hibernate", @version: "3"}
		database = {@version: "5", @name: "Postgres", @user: "USER", @pass: "123456", @host: "localhost"}
	}
	
	
	interface Library  {
		//Cria as telas da aplicação Library
		HtmlView Library2 => Library
	
		//Criar um webservice do application Library
		RestFull Library1 => Library
	}
	
	
	application Library {
	    composedBy Library.*
		composedBy Loan.*
	}
	
	
	application LibraryPerson{
	    // Tem acesso apenas aos elemento do modulo person
		composedBy Library.Person.*
	}
	
	domain Loan {
		module X{}
		module Y {}
	}
	
	domain Library {
		module Media {
			service LibraryService {
				//nome => entity.repositorio.metodo
				//nome => service.metodo
				//nome => module.service.metodo
				//nome => domain.module.service.metodo
				findLibraryByName => Library.LibraryRepository.findLibraryByName
      			findMediaByName => Media.MediaRepository.findMediaByName
      			findMediaByCharacter => Media.MediaRepository.findMediaByCharacter
      			findPersonByName => PersonService.findPersonByName
    		}
    		
			entity Library {
				String name //key
				Set<PhysicalMedia> media
				
				repository LibraryRepository {
					findLibraryByName(String name) : Library
				}
    		}
    
		    entity PhysicalMedia {
		    	//version
		      String status
		      String location
		      Library library //nullable
		      Set<Media> media
		    }
    
		    service MediaService {
		      findAll => MediaRepository.findAll
		    }
    
		    abstract entity Media {
		      String titleb
		      Set<PhysicalMedia> physicalMedia
		      Set<Engagement> engagements
		      Set<MediaCharacter> mediaCharacters
		    
		      repository MediaRepository {
		        findMediaByCharacter(String characterName) : List<Media>
		        //findById
		        //save
		        //findAll
		        findMediaByName(Long libraryId, String name) : List<Media>
		      }
    		}
    
		    entity Book : Media, Movie {
		      //!auditable
		      String isbn //key length="20"
		    }
    
		    entity Movie : Media {
		      //!auditable
		      String urlIMDB //key
		      Integer playLength
		      Genre category //nullable
		    }
		    
		    enum Genre {
		      ACTION,
		      COMEDY,
		      DRAMA,
		      SCI_FI
		    }
		    
		      
		    service MediaCharacterService {
		      findAll => MediaCharacterRepository.findAll
		    }
		}
    
		module person {
		    service PersonService {
		      findPersonByName => PersonRepository.findPersonByName
		    }
		    
		    entity Person {
		      Date birthDate //past
		      Gender sex //!changeable
		      Ssn ssn //key
		      
		      repository PersonRepository {
		        findPersonByName(String name): List<Person>
		        /*save;
		        findByExample;
		        findByKeys;*/
		      }
	    	}
	    	
	    	enum Gender {
		      FEMALE,//("F"),
		      MALE//("M")
		    }
  		}
	}
}
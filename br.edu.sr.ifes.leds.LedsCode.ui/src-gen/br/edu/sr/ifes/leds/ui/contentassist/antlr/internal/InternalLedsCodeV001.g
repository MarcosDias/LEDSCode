/*
 * generated by Xtext
 */
grammar InternalLedsCodeV001;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package br.edu.sr.ifes.leds.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.edu.sr.ifes.leds.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.edu.sr.ifes.leds.services.LedsCodeV001GrammarAccess;

}

@parser::members {
 
 	private LedsCodeV001GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LedsCodeV001GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLedsCodeDSL
entryRuleLedsCodeDSL 
:
{ before(grammarAccess.getLedsCodeDSLRule()); }
	 ruleLedsCodeDSL
{ after(grammarAccess.getLedsCodeDSLRule()); } 
	 EOF 
;

// Rule LedsCodeDSL
ruleLedsCodeDSL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLedsCodeDSLAccess().getProjectAssignment()); }
(rule__LedsCodeDSL__ProjectAssignment)
{ after(grammarAccess.getLedsCodeDSLAccess().getProjectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProject
entryRuleProject 
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectAccess().getAlternatives()); }
(rule__Project__Alternatives)
{ after(grammarAccess.getProjectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceBlock
entryRuleInterfaceBlock 
:
{ before(grammarAccess.getInterfaceBlockRule()); }
	 ruleInterfaceBlock
{ after(grammarAccess.getInterfaceBlockRule()); } 
	 EOF 
;

// Rule InterfaceBlock
ruleInterfaceBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceBlockAccess().getGroup()); }
(rule__InterfaceBlock__Group__0)
{ after(grammarAccess.getInterfaceBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfrastructureBlock
entryRuleInfrastructureBlock 
:
{ before(grammarAccess.getInfrastructureBlockRule()); }
	 ruleInfrastructureBlock
{ after(grammarAccess.getInfrastructureBlockRule()); } 
	 EOF 
;

// Rule InfrastructureBlock
ruleInfrastructureBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup()); }
(rule__InfrastructureBlock__Group__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictBlock
entryRuleDictBlock 
:
{ before(grammarAccess.getDictBlockRule()); }
	 ruleDictBlock
{ after(grammarAccess.getDictBlockRule()); } 
	 EOF 
;

// Rule DictBlock
ruleDictBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictBlockAccess().getGroup()); }
(rule__DictBlock__Group__0)
{ after(grammarAccess.getDictBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplicationBlock
entryRuleApplicationBlock 
:
{ before(grammarAccess.getApplicationBlockRule()); }
	 ruleApplicationBlock
{ after(grammarAccess.getApplicationBlockRule()); } 
	 EOF 
;

// Rule ApplicationBlock
ruleApplicationBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplicationBlockAccess().getGroup()); }
(rule__ApplicationBlock__Group__0)
{ after(grammarAccess.getApplicationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainBlock
entryRuleDomainBlock 
:
{ before(grammarAccess.getDomainBlockRule()); }
	 ruleDomainBlock
{ after(grammarAccess.getDomainBlockRule()); } 
	 EOF 
;

// Rule DomainBlock
ruleDomainBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainBlockAccess().getGroup()); }
(rule__DomainBlock__Group__0)
{ after(grammarAccess.getDomainBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleBlock
entryRuleModuleBlock 
:
{ before(grammarAccess.getModuleBlockRule()); }
	 ruleModuleBlock
{ after(grammarAccess.getModuleBlockRule()); } 
	 EOF 
;

// Rule ModuleBlock
ruleModuleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleBlockAccess().getGroup()); }
(rule__ModuleBlock__Group__0)
{ after(grammarAccess.getModuleBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleServiceBlock
entryRuleServiceBlock 
:
{ before(grammarAccess.getServiceBlockRule()); }
	 ruleServiceBlock
{ after(grammarAccess.getServiceBlockRule()); } 
	 EOF 
;

// Rule ServiceBlock
ruleServiceBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceBlockAccess().getGroup()); }
(rule__ServiceBlock__Group__0)
{ after(grammarAccess.getServiceBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityBlock
entryRuleEntityBlock 
:
{ before(grammarAccess.getEntityBlockRule()); }
	 ruleEntityBlock
{ after(grammarAccess.getEntityBlockRule()); } 
	 EOF 
;

// Rule EntityBlock
ruleEntityBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityBlockAccess().getGroup()); }
(rule__EntityBlock__Group__0)
{ after(grammarAccess.getEntityBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepositoryBlock
entryRuleRepositoryBlock 
:
{ before(grammarAccess.getRepositoryBlockRule()); }
	 ruleRepositoryBlock
{ after(grammarAccess.getRepositoryBlockRule()); } 
	 EOF 
;

// Rule RepositoryBlock
ruleRepositoryBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepositoryBlockAccess().getGroup()); }
(rule__RepositoryBlock__Group__0)
{ after(grammarAccess.getRepositoryBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumBlock
entryRuleEnumBlock 
:
{ before(grammarAccess.getEnumBlockRule()); }
	 ruleEnumBlock
{ after(grammarAccess.getEnumBlockRule()); } 
	 EOF 
;

// Rule EnumBlock
ruleEnumBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumBlockAccess().getGroup()); }
(rule__EnumBlock__Group__0)
{ after(grammarAccess.getEnumBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodParameter
entryRuleMethodParameter 
:
{ before(grammarAccess.getMethodParameterRule()); }
	 ruleMethodParameter
{ after(grammarAccess.getMethodParameterRule()); } 
	 EOF 
;

// Rule MethodParameter
ruleMethodParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodParameterAccess().getGroup()); }
(rule__MethodParameter__Group__0)
{ after(grammarAccess.getMethodParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyValue
entryRuleKeyValue 
:
{ before(grammarAccess.getKeyValueRule()); }
	 ruleKeyValue
{ after(grammarAccess.getKeyValueRule()); } 
	 EOF 
;

// Rule KeyValue
ruleKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyValueAccess().getGroup()); }
(rule__KeyValue__Group__0)
{ after(grammarAccess.getKeyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendBlock
entryRuleExtendBlock 
:
{ before(grammarAccess.getExtendBlockRule()); }
	 ruleExtendBlock
{ after(grammarAccess.getExtendBlockRule()); } 
	 EOF 
;

// Rule ExtendBlock
ruleExtendBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendBlockAccess().getGroup()); }
(rule__ExtendBlock__Group__0)
{ after(grammarAccess.getExtendBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtend
entryRuleExtend 
:
{ before(grammarAccess.getExtendRule()); }
	 ruleExtend
{ after(grammarAccess.getExtendRule()); } 
	 EOF 
;

// Rule Extend
ruleExtend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendAccess().getAlternatives()); }
(rule__Extend__Alternatives)
{ after(grammarAccess.getExtendAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplementBlock
entryRuleImplementBlock 
:
{ before(grammarAccess.getImplementBlockRule()); }
	 ruleImplementBlock
{ after(grammarAccess.getImplementBlockRule()); } 
	 EOF 
;

// Rule ImplementBlock
ruleImplementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplementBlockAccess().getGroup()); }
(rule__ImplementBlock__Group__0)
{ after(grammarAccess.getImplementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplement
entryRuleImplement 
:
{ before(grammarAccess.getImplementRule()); }
	 ruleImplement
{ after(grammarAccess.getImplementRule()); } 
	 EOF 
;

// Rule Implement
ruleImplement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplementAccess().getAlternatives()); }
(rule__Implement__Alternatives)
{ after(grammarAccess.getImplementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeList
entryRuleDataTypeList 
:
{ before(grammarAccess.getDataTypeListRule()); }
	 ruleDataTypeList
{ after(grammarAccess.getDataTypeListRule()); } 
	 EOF 
;

// Rule DataTypeList
ruleDataTypeList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeListAccess().getGroup()); }
(rule__DataTypeList__Group__0)
{ after(grammarAccess.getDataTypeListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeSet
entryRuleDataTypeSet 
:
{ before(grammarAccess.getDataTypeSetRule()); }
	 ruleDataTypeSet
{ after(grammarAccess.getDataTypeSetRule()); } 
	 EOF 
;

// Rule DataTypeSet
ruleDataTypeSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeSetAccess().getGroup()); }
(rule__DataTypeSet__Group__0)
{ after(grammarAccess.getDataTypeSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessModifier
entryRuleAccessModifier 
:
{ before(grammarAccess.getAccessModifierRule()); }
	 ruleAccessModifier
{ after(grammarAccess.getAccessModifierRule()); } 
	 EOF 
;

// Rule AccessModifier
ruleAccessModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessModifierAccess().getAlternatives()); }
(rule__AccessModifier__Alternatives)
{ after(grammarAccess.getAccessModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrivate
entryRulePrivate 
:
{ before(grammarAccess.getPrivateRule()); }
	 rulePrivate
{ after(grammarAccess.getPrivateRule()); } 
	 EOF 
;

// Rule Private
rulePrivate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrivateAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getPrivateAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProtected
entryRuleProtected 
:
{ before(grammarAccess.getProtectedRule()); }
	 ruleProtected
{ after(grammarAccess.getProtectedRule()); } 
	 EOF 
;

// Rule Protected
ruleProtected
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProtectedAccess().getNumberSignKeyword()); }

	'#' 

{ after(grammarAccess.getProtectedAccess().getNumberSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportCompoundName
entryRuleImportCompoundName 
:
{ before(grammarAccess.getImportCompoundNameRule()); }
	 ruleImportCompoundName
{ after(grammarAccess.getImportCompoundNameRule()); } 
	 EOF 
;

// Rule ImportCompoundName
ruleImportCompoundName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportCompoundNameAccess().getGroup()); }
(rule__ImportCompoundName__Group__0)
{ after(grammarAccess.getImportCompoundNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundName
entryRuleCompoundName 
:
{ before(grammarAccess.getCompoundNameRule()); }
	 ruleCompoundName
{ after(grammarAccess.getCompoundNameRule()); } 
	 EOF 
;

// Rule CompoundName
ruleCompoundName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundNameAccess().getGroup()); }
(rule__CompoundName__Group__0)
{ after(grammarAccess.getCompoundNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundVersion
entryRuleCompoundVersion 
:
{ before(grammarAccess.getCompoundVersionRule()); }
	 ruleCompoundVersion
{ after(grammarAccess.getCompoundVersionRule()); } 
	 EOF 
;

// Rule CompoundVersion
ruleCompoundVersion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundVersionAccess().getGroup()); }
(rule__CompoundVersion__Group__0)
{ after(grammarAccess.getCompoundVersionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Project__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getGroup_0()); }
(rule__Project__Group_0__0)
{ after(grammarAccess.getProjectAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getProjectAccess().getInterfaceBlockParserRuleCall_1()); }
(	ruleInterfaceBlock)?
{ after(grammarAccess.getProjectAccess().getInterfaceBlockParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getProjectAccess().getGroup_2()); }
(rule__Project__Group_2__0)
{ after(grammarAccess.getProjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getApplicationBlockParserRuleCall_2_0_0()); }
	ruleApplicationBlock
{ after(grammarAccess.getProjectAccess().getApplicationBlockParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getProjectAccess().getDomainBlockParserRuleCall_2_0_1()); }
	ruleDomainBlock
{ after(grammarAccess.getProjectAccess().getDomainBlockParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getHtmlViewKeyword_3_0_0()); }

	'HtmlView' 

{ after(grammarAccess.getInterfaceBlockAccess().getHtmlViewKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getInterfaceBlockAccess().getRestFullKeyword_3_0_1()); }

	'RestFull' 

{ after(grammarAccess.getInterfaceBlockAccess().getRestFullKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_0()); }
(rule__InfrastructureBlock__Group_2_0__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_1()); }
(rule__InfrastructureBlock__Group_2_1__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_2()); }
(rule__InfrastructureBlock__Group_2_2__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_2()); }
)

    |(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_3()); }
(rule__InfrastructureBlock__Group_2_3__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_3()); }
)

    |(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_4()); }
(rule__InfrastructureBlock__Group_2_4__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_4()); }
)

    |(
{ before(grammarAccess.getInfrastructureBlockAccess().getGroup_2_5()); }
(rule__InfrastructureBlock__Group_2_5__0)
{ after(grammarAccess.getInfrastructureBlockAccess().getGroup_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getServiceBlockParserRuleCall_3_0()); }
	ruleServiceBlock
{ after(grammarAccess.getModuleBlockAccess().getServiceBlockParserRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getModuleBlockAccess().getEntityBlockParserRuleCall_3_1()); }
	ruleEntityBlock
{ after(grammarAccess.getModuleBlockAccess().getEntityBlockParserRuleCall_3_1()); }
)

    |(
{ before(grammarAccess.getModuleBlockAccess().getEnumBlockParserRuleCall_3_2()); }
	ruleEnumBlock
{ after(grammarAccess.getModuleBlockAccess().getEnumBlockParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeListParserRuleCall_0()); }
	ruleDataTypeList
{ after(grammarAccess.getDataTypeAccess().getDataTypeListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDataTypeSetParserRuleCall_1()); }
	ruleDataTypeSet
{ after(grammarAccess.getDataTypeAccess().getDataTypeSetParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getCompoundNameParserRuleCall_2()); }
	ruleCompoundName
{ after(grammarAccess.getDataTypeAccess().getCompoundNameParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getStringKeyword_3()); }

	'String' 

{ after(grammarAccess.getDataTypeAccess().getStringKeyword_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getDataTypeAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getIntegerKeyword_5()); }

	'Integer' 

{ after(grammarAccess.getDataTypeAccess().getIntegerKeyword_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getDataTypeAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getLongKeyword_7()); }

	'Long' 

{ after(grammarAccess.getDataTypeAccess().getLongKeyword_7()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getBooleanKeyword_8()); }

	'boolean' 

{ after(grammarAccess.getDataTypeAccess().getBooleanKeyword_8()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getBooleanKeyword_9()); }

	'Boolean' 

{ after(grammarAccess.getDataTypeAccess().getBooleanKeyword_9()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDateTimeKeyword_10()); }

	'DateTime' 

{ after(grammarAccess.getDataTypeAccess().getDateTimeKeyword_10()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDoubleKeyword_11()); }

	'double' 

{ after(grammarAccess.getDataTypeAccess().getDoubleKeyword_11()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDoubleKeyword_12()); }

	'Double' 

{ after(grammarAccess.getDataTypeAccess().getDoubleKeyword_12()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getFloatKeyword_13()); }

	'float' 

{ after(grammarAccess.getDataTypeAccess().getFloatKeyword_13()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getFloatKeyword_14()); }

	'Float' 

{ after(grammarAccess.getDataTypeAccess().getFloatKeyword_14()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getObjectKeyword_15()); }

	'Object' 

{ after(grammarAccess.getDataTypeAccess().getObjectKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getExtendKeyword_0()); }

	'extend' 

{ after(grammarAccess.getExtendAccess().getExtendKeyword_0()); }
)

    |(
{ before(grammarAccess.getExtendAccess().getExtKeyword_1()); }

	'ext' 

{ after(grammarAccess.getExtendAccess().getExtKeyword_1()); }
)

    |(
{ before(grammarAccess.getExtendAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getExtendAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementAccess().getImplementKeyword_0()); }

	'implement' 

{ after(grammarAccess.getImplementAccess().getImplementKeyword_0()); }
)

    |(
{ before(grammarAccess.getImplementAccess().getImpKeyword_1()); }

	'imp' 

{ after(grammarAccess.getImplementAccess().getImpKeyword_1()); }
)

    |(
{ before(grammarAccess.getImplementAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getImplementAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessModifierAccess().getPrivateParserRuleCall_0()); }
	rulePrivate
{ after(grammarAccess.getAccessModifierAccess().getPrivateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAccessModifierAccess().getProtectedParserRuleCall_1()); }
	ruleProtected
{ after(grammarAccess.getAccessModifierAccess().getProtectedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Project__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_0__0__Impl
	rule__Project__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getProjectKeyword_0_0()); }

	'project' 

{ after(grammarAccess.getProjectAccess().getProjectKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_0__1__Impl
	rule__Project__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getIDTerminalRuleCall_0_1()); }
	RULE_ID
{ after(grammarAccess.getProjectAccess().getIDTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_0__2__Impl
	rule__Project__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_0_2()); }

	'{' 

{ after(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getInfrastructureBlockParserRuleCall_0_3()); }
	ruleInfrastructureBlock
{ after(grammarAccess.getProjectAccess().getInfrastructureBlockParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Project__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_2__0__Impl
	rule__Project__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getAlternatives_2_0()); }
(rule__Project__Alternatives_2_0)*
{ after(grammarAccess.getProjectAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Project__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_2_1()); }

	'}' 

{ after(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group__0__Impl
	rule__InterfaceBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getInterfaceBlockAccess().getInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group__1__Impl
	rule__InterfaceBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getInterfaceBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group__2__Impl
	rule__InterfaceBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getInterfaceBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group__3__Impl
	rule__InterfaceBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getGroup_3()); }
(rule__InterfaceBlock__Group_3__0)*
{ after(grammarAccess.getInterfaceBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInterfaceBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group_3__0__Impl
	rule__InterfaceBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getAlternatives_3_0()); }
(rule__InterfaceBlock__Alternatives_3_0)
{ after(grammarAccess.getInterfaceBlockAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceBlock__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceBlockAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getInterfaceBlockAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfrastructureBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group__0__Impl
	rule__InfrastructureBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getInfrastructureKeyword_0()); }

	'infrastructure' 

{ after(grammarAccess.getInfrastructureBlockAccess().getInfrastructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group__1__Impl
	rule__InfrastructureBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInfrastructureBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group__2__Impl
	rule__InfrastructureBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getAlternatives_2()); }
(rule__InfrastructureBlock__Alternatives_2)
{ after(grammarAccess.getInfrastructureBlockAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getInfrastructureBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InfrastructureBlock__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_0__0__Impl
	rule__InfrastructureBlock__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getBasePackageKeyword_2_0_0()); }

	'basePackage' 

{ after(grammarAccess.getInfrastructureBlockAccess().getBasePackageKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_0__1__Impl
	rule__InfrastructureBlock__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_0_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getCompoundNameParserRuleCall_2_0_2()); }
	ruleCompoundName
{ after(grammarAccess.getInfrastructureBlockAccess().getCompoundNameParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfrastructureBlock__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_1__0__Impl
	rule__InfrastructureBlock__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getProjectVersionKeyword_2_1_0()); }

	'projectVersion' 

{ after(grammarAccess.getInfrastructureBlockAccess().getProjectVersionKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_1__1__Impl
	rule__InfrastructureBlock__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_1_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getCompoundVersionParserRuleCall_2_1_2()); }
	ruleCompoundVersion
{ after(grammarAccess.getInfrastructureBlockAccess().getCompoundVersionParserRuleCall_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfrastructureBlock__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_2__0__Impl
	rule__InfrastructureBlock__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getLanguageKeyword_2_2_0()); }

	'language' 

{ after(grammarAccess.getInfrastructureBlockAccess().getLanguageKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_2__1__Impl
	rule__InfrastructureBlock__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_2_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_2_2()); }
	ruleDictBlock
{ after(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfrastructureBlock__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_3__0__Impl
	rule__InfrastructureBlock__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getFrameworkKeyword_2_3_0()); }

	'framework' 

{ after(grammarAccess.getInfrastructureBlockAccess().getFrameworkKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_3__1__Impl
	rule__InfrastructureBlock__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_3_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_3_2()); }
	ruleDictBlock
{ after(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfrastructureBlock__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_4__0__Impl
	rule__InfrastructureBlock__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getOrmKeyword_2_4_0()); }

	'orm' 

{ after(grammarAccess.getInfrastructureBlockAccess().getOrmKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_4__1__Impl
	rule__InfrastructureBlock__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_4_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_4_2()); }
	ruleDictBlock
{ after(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InfrastructureBlock__Group_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_5__0__Impl
	rule__InfrastructureBlock__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getDatabaseKeyword_2_5_0()); }

	'database' 

{ after(grammarAccess.getInfrastructureBlockAccess().getDatabaseKeyword_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_5__1__Impl
	rule__InfrastructureBlock__Group_2_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_5_1()); }

	'=' 

{ after(grammarAccess.getInfrastructureBlockAccess().getEqualsSignKeyword_2_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureBlock__Group_2_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureBlock__Group_2_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureBlock__Group_2_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_5_2()); }
	ruleDictBlock
{ after(grammarAccess.getInfrastructureBlockAccess().getDictBlockParserRuleCall_2_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group__0__Impl
	rule__DictBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getDictBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group__1__Impl
	rule__DictBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getGroup_1()); }
(rule__DictBlock__Group_1__0)?
{ after(grammarAccess.getDictBlockAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getDictBlockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictBlock__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group_1__0__Impl
	rule__DictBlock__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getKeyValueParserRuleCall_1_0()); }
	ruleKeyValue
{ after(grammarAccess.getDictBlockAccess().getKeyValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictBlock__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getGroup_1_1()); }
(rule__DictBlock__Group_1_1__0)*
{ after(grammarAccess.getDictBlockAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DictBlock__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group_1_1__0__Impl
	rule__DictBlock__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getDictBlockAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictBlock__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictBlock__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictBlock__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictBlockAccess().getKeyValueParserRuleCall_1_1_1()); }
	ruleKeyValue
{ after(grammarAccess.getDictBlockAccess().getKeyValueParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ApplicationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group__0__Impl
	rule__ApplicationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getApplicationKeyword_0()); }

	'application' 

{ after(grammarAccess.getApplicationBlockAccess().getApplicationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group__1__Impl
	rule__ApplicationBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getApplicationBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group__2__Impl
	rule__ApplicationBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getApplicationBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group__3__Impl
	rule__ApplicationBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getGroup_3()); }
(rule__ApplicationBlock__Group_3__0)*
{ after(grammarAccess.getApplicationBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getApplicationBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ApplicationBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group_3__0__Impl
	rule__ApplicationBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getComposedByKeyword_3_0()); }

	'composedBy' 

{ after(grammarAccess.getApplicationBlockAccess().getComposedByKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ApplicationBlock__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationBlockAccess().getImportCompoundNameParserRuleCall_3_1()); }
	ruleImportCompoundName
{ after(grammarAccess.getApplicationBlockAccess().getImportCompoundNameParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DomainBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainBlock__Group__0__Impl
	rule__DomainBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainBlockAccess().getDomainKeyword_0()); }

	'domain' 

{ after(grammarAccess.getDomainBlockAccess().getDomainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainBlock__Group__1__Impl
	rule__DomainBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getDomainBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainBlock__Group__2__Impl
	rule__DomainBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDomainBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainBlock__Group__3__Impl
	rule__DomainBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainBlockAccess().getModuleBlockParserRuleCall_3()); }
(	ruleModuleBlock)*
{ after(grammarAccess.getDomainBlockAccess().getModuleBlockParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getDomainBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ModuleBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleBlock__Group__0__Impl
	rule__ModuleBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleBlockAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleBlock__Group__1__Impl
	rule__ModuleBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getModuleBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleBlock__Group__2__Impl
	rule__ModuleBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModuleBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleBlock__Group__3__Impl
	rule__ModuleBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getAlternatives_3()); }
(rule__ModuleBlock__Alternatives_3)*
{ after(grammarAccess.getModuleBlockAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModuleBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ServiceBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group__0__Impl
	rule__ServiceBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getServiceKeyword_0()); }

	'service' 

{ after(grammarAccess.getServiceBlockAccess().getServiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group__1__Impl
	rule__ServiceBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group__2__Impl
	rule__ServiceBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getServiceBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group__3__Impl
	rule__ServiceBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getGroup_3()); }
(rule__ServiceBlock__Group_3__0)*
{ after(grammarAccess.getServiceBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getServiceBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ServiceBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group_3__0__Impl
	rule__ServiceBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_0()); }
	RULE_ID
{ after(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group_3__1__Impl
	rule__ServiceBlock__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getEqualsSignGreaterThanSignKeyword_3_1()); }

	'=>' 

{ after(grammarAccess.getServiceBlockAccess().getEqualsSignGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group_3__2__Impl
	rule__ServiceBlock__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_2()); }
	RULE_ID
{ after(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group_3__3__Impl
	rule__ServiceBlock__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getFullStopKeyword_3_3()); }

	'.' 

{ after(grammarAccess.getServiceBlockAccess().getFullStopKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceBlock__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ServiceBlock__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceBlock__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_4()); }
	RULE_ID
{ after(grammarAccess.getServiceBlockAccess().getIDTerminalRuleCall_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EntityBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__0__Impl
	rule__EntityBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getAccessModifierParserRuleCall_0()); }
(	ruleAccessModifier)?
{ after(grammarAccess.getEntityBlockAccess().getAccessModifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__1__Impl
	rule__EntityBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getAbstractKeyword_1()); }
(
	'abstract' 
)?
{ after(grammarAccess.getEntityBlockAccess().getAbstractKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__2__Impl
	rule__EntityBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getEntityKeyword_2()); }

	'entity' 

{ after(grammarAccess.getEntityBlockAccess().getEntityKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__3__Impl
	rule__EntityBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getEntityBlockAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__4__Impl
	rule__EntityBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getExtendBlockParserRuleCall_4()); }
(	ruleExtendBlock)?
{ after(grammarAccess.getEntityBlockAccess().getExtendBlockParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__5__Impl
	rule__EntityBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getImplementBlockParserRuleCall_5()); }
(	ruleImplementBlock)?
{ after(grammarAccess.getEntityBlockAccess().getImplementBlockParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__6__Impl
	rule__EntityBlock__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getEntityBlockAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__7__Impl
	rule__EntityBlock__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getGroup_7()); }
(rule__EntityBlock__Group_7__0)*
{ after(grammarAccess.getEntityBlockAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__8__Impl
	rule__EntityBlock__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getRepositoryBlockParserRuleCall_8()); }
(	ruleRepositoryBlock)?
{ after(grammarAccess.getEntityBlockAccess().getRepositoryBlockParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getEntityBlockAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__EntityBlock__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group_7__0__Impl
	rule__EntityBlock__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getAccessModifierParserRuleCall_7_0()); }
(	ruleAccessModifier)?
{ after(grammarAccess.getEntityBlockAccess().getAccessModifierParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group_7__1__Impl
	rule__EntityBlock__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getDataTypeParserRuleCall_7_1()); }
	ruleDataType
{ after(grammarAccess.getEntityBlockAccess().getDataTypeParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityBlock__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityBlock__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityBlock__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityBlockAccess().getIDTerminalRuleCall_7_2()); }
	RULE_ID
{ after(grammarAccess.getEntityBlockAccess().getIDTerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RepositoryBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group__0__Impl
	rule__RepositoryBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getRepositoryKeyword_0()); }

	'repository' 

{ after(grammarAccess.getRepositoryBlockAccess().getRepositoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group__1__Impl
	rule__RepositoryBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getRepositoryBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group__2__Impl
	rule__RepositoryBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRepositoryBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group__3__Impl
	rule__RepositoryBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getGroup_3()); }
(rule__RepositoryBlock__Group_3__0)*
{ after(grammarAccess.getRepositoryBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRepositoryBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RepositoryBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__0__Impl
	rule__RepositoryBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getIDTerminalRuleCall_3_0()); }
	RULE_ID
{ after(grammarAccess.getRepositoryBlockAccess().getIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__1__Impl
	rule__RepositoryBlock__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getLeftParenthesisKeyword_3_1()); }

	'(' 

{ after(grammarAccess.getRepositoryBlockAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__2__Impl
	rule__RepositoryBlock__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getMethodParameterParserRuleCall_3_2()); }
	ruleMethodParameter
{ after(grammarAccess.getRepositoryBlockAccess().getMethodParameterParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__3__Impl
	rule__RepositoryBlock__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getRepositoryBlockAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__4__Impl
	rule__RepositoryBlock__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getColonKeyword_3_4()); }

	':' 

{ after(grammarAccess.getRepositoryBlockAccess().getColonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryBlock__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RepositoryBlock__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryBlock__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepositoryBlockAccess().getDataTypeParserRuleCall_3_5()); }
	ruleDataType
{ after(grammarAccess.getRepositoryBlockAccess().getDataTypeParserRuleCall_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__0__Impl
	rule__EnumBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumBlockAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__1__Impl
	rule__EnumBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__2__Impl
	rule__EnumBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__3__Impl
	rule__EnumBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__4__Impl
	rule__EnumBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getGroup_4()); }
(rule__EnumBlock__Group_4__0)*
{ after(grammarAccess.getEnumBlockAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEnumBlockAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumBlock__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group_4__0__Impl
	rule__EnumBlock__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getEnumBlockAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumBlock__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumBlock__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumBlock__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_4_1()); }
	RULE_ID
{ after(grammarAccess.getEnumBlockAccess().getIDTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group__0__Impl
	rule__MethodParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getDataTypeParserRuleCall_0()); }
	ruleDataType
{ after(grammarAccess.getMethodParameterAccess().getDataTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group__1__Impl
	rule__MethodParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getMethodParameterAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getGroup_2()); }
(rule__MethodParameter__Group_2__0)*
{ after(grammarAccess.getMethodParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodParameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group_2__0__Impl
	rule__MethodParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getMethodParameterAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodParameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group_2__1__Impl
	rule__MethodParameter__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getDataTypeParserRuleCall_2_1()); }
	ruleDataType
{ after(grammarAccess.getMethodParameterAccess().getDataTypeParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodParameter__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodParameter__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodParameter__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodParameterAccess().getIDTerminalRuleCall_2_2()); }
	RULE_ID
{ after(grammarAccess.getMethodParameterAccess().getIDTerminalRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValue__Group__0__Impl
	rule__KeyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValueAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getKeyValueAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValue__Group__1__Impl
	rule__KeyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValueAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getKeyValueAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValueAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getKeyValueAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendBlock__Group__0__Impl
	rule__ExtendBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendBlockAccess().getExtendParserRuleCall_0()); }
	ruleExtend
{ after(grammarAccess.getExtendBlockAccess().getExtendParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendBlockAccess().getCompoundNameParserRuleCall_1()); }
	ruleCompoundName
{ after(grammarAccess.getExtendBlockAccess().getCompoundNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImplementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplementBlock__Group__0__Impl
	rule__ImplementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementBlockAccess().getImplementParserRuleCall_0()); }
	ruleImplement
{ after(grammarAccess.getImplementBlockAccess().getImplementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplementBlock__Group__1__Impl
	rule__ImplementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementBlockAccess().getCompoundNameParserRuleCall_1()); }
	ruleCompoundName
{ after(grammarAccess.getImplementBlockAccess().getCompoundNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplementBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementBlockAccess().getGroup_2()); }
(rule__ImplementBlock__Group_2__0)*
{ after(grammarAccess.getImplementBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImplementBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplementBlock__Group_2__0__Impl
	rule__ImplementBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementBlockAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getImplementBlockAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImplementBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementBlockAccess().getCompoundNameParserRuleCall_2_1()); }
	ruleCompoundName
{ after(grammarAccess.getImplementBlockAccess().getCompoundNameParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeList__Group__0__Impl
	rule__DataTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeListAccess().getListKeyword_0()); }

	'List' 

{ after(grammarAccess.getDataTypeListAccess().getListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeList__Group__1__Impl
	rule__DataTypeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeListAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getDataTypeListAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeList__Group__2__Impl
	rule__DataTypeList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeListAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getDataTypeListAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeListAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getDataTypeListAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeSet__Group__0__Impl
	rule__DataTypeSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeSetAccess().getSetKeyword_0()); }

	'Set' 

{ after(grammarAccess.getDataTypeSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeSet__Group__1__Impl
	rule__DataTypeSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeSetAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getDataTypeSetAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeSet__Group__2__Impl
	rule__DataTypeSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeSetAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getDataTypeSetAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeSetAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getDataTypeSetAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ImportCompoundName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportCompoundName__Group__0__Impl
	rule__ImportCompoundName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportCompoundName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportCompoundNameAccess().getCompoundNameParserRuleCall_0()); }
	ruleCompoundName
{ after(grammarAccess.getImportCompoundNameAccess().getCompoundNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportCompoundName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportCompoundName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportCompoundName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportCompoundNameAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getImportCompoundNameAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundName__Group__0__Impl
	rule__CompoundName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getGroup_1()); }
(rule__CompoundName__Group_1__0)*
{ after(grammarAccess.getCompoundNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundName__Group_1__0__Impl
	rule__CompoundName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getCompoundNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getCompoundNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundVersion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundVersion__Group__0__Impl
	rule__CompoundVersion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundVersion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundVersionAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getCompoundVersionAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundVersion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundVersion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundVersion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundVersionAccess().getGroup_1()); }
(rule__CompoundVersion__Group_1__0)*
{ after(grammarAccess.getCompoundVersionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompoundVersion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundVersion__Group_1__0__Impl
	rule__CompoundVersion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundVersion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundVersionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getCompoundVersionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundVersion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompoundVersion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundVersion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundVersionAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getCompoundVersionAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LedsCodeDSL__ProjectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLedsCodeDSLAccess().getProjectProjectParserRuleCall_0()); }
	ruleProject{ after(grammarAccess.getLedsCodeDSLAccess().getProjectProjectParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



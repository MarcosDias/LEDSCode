/*
 * generated by Xtext
 */
package br.edu.sr.ifes.leds.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import br.edu.sr.ifes.leds.services.LedsCodeV001GrammarAccess;

public class LedsCodeV001Parser extends AbstractContentAssistParser {
	
	@Inject
	private LedsCodeV001GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected br.edu.sr.ifes.leds.ui.contentassist.antlr.internal.InternalLedsCodeV001Parser createParser() {
		br.edu.sr.ifes.leds.ui.contentassist.antlr.internal.InternalLedsCodeV001Parser result = new br.edu.sr.ifes.leds.ui.contentassist.antlr.internal.InternalLedsCodeV001Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getInterfaceApplicationAccess().getTypeAlternatives_0_0(), "rule__InterfaceApplication__TypeAlternatives_0_0");
					put(grammarAccess.getModuleBlockAccess().getAlternatives_3(), "rule__ModuleBlock__Alternatives_3");
					put(grammarAccess.getAttributeAccess().getAlternatives_3(), "rule__Attribute__Alternatives_3");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getExtendAccess().getAlternatives(), "rule__Extend__Alternatives");
					put(grammarAccess.getAccessModifierAccess().getAlternatives(), "rule__AccessModifier__Alternatives");
					put(grammarAccess.getPrivateAccess().getAlternatives(), "rule__Private__Alternatives");
					put(grammarAccess.getProtectedAccess().getAlternatives(), "rule__Protected__Alternatives");
					put(grammarAccess.getBOOLEANAccess().getAlternatives(), "rule__BOOLEAN__Alternatives");
					put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
					put(grammarAccess.getInterfaceBlockAccess().getGroup(), "rule__InterfaceBlock__Group__0");
					put(grammarAccess.getInterfaceApplicationAccess().getGroup(), "rule__InterfaceApplication__Group__0");
					put(grammarAccess.getInfrastructureBlockAccess().getGroup(), "rule__InfrastructureBlock__Group__0");
					put(grammarAccess.getDatabaseAccess().getGroup(), "rule__Database__Group__0");
					put(grammarAccess.getNameVersionAccess().getGroup(), "rule__NameVersion__Group__0");
					put(grammarAccess.getApplicationBlockAccess().getGroup(), "rule__ApplicationBlock__Group__0");
					put(grammarAccess.getApplicationBlockAccess().getGroup_3(), "rule__ApplicationBlock__Group_3__0");
					put(grammarAccess.getDomainBlockAccess().getGroup(), "rule__DomainBlock__Group__0");
					put(grammarAccess.getModuleBlockAccess().getGroup(), "rule__ModuleBlock__Group__0");
					put(grammarAccess.getServiceBlockAccess().getGroup(), "rule__ServiceBlock__Group__0");
					put(grammarAccess.getServiceMethodAccess().getGroup(), "rule__ServiceMethod__Group__0");
					put(grammarAccess.getEntityBlockAccess().getGroup(), "rule__EntityBlock__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup_3_1(), "rule__Attribute__Group_3_1__0");
					put(grammarAccess.getAttributeAccess().getGroup_3_2(), "rule__Attribute__Group_3_2__0");
					put(grammarAccess.getAttributeAccess().getGroup_3_3(), "rule__Attribute__Group_3_3__0");
					put(grammarAccess.getAttributeAccess().getGroup_3_4(), "rule__Attribute__Group_3_4__0");
					put(grammarAccess.getAttributeAccess().getGroup_3_5(), "rule__Attribute__Group_3_5__0");
					put(grammarAccess.getRepositoryAccess().getGroup(), "rule__Repository__Group__0");
					put(grammarAccess.getRepositoryFieldsAccess().getGroup(), "rule__RepositoryFields__Group__0");
					put(grammarAccess.getEnumBlockAccess().getGroup(), "rule__EnumBlock__Group__0");
					put(grammarAccess.getEnumBlockAccess().getGroup_4(), "rule__EnumBlock__Group_4__0");
					put(grammarAccess.getMethodParameterAccess().getGroup(), "rule__MethodParameter__Group__0");
					put(grammarAccess.getMethodParameterAccess().getGroup_1(), "rule__MethodParameter__Group_1__0");
					put(grammarAccess.getTypeAndAttributeAccess().getGroup(), "rule__TypeAndAttribute__Group__0");
					put(grammarAccess.getExtendBlockAccess().getGroup(), "rule__ExtendBlock__Group__0");
					put(grammarAccess.getExtendBlockAccess().getGroup_2(), "rule__ExtendBlock__Group_2__0");
					put(grammarAccess.getDataTypeListAccess().getGroup(), "rule__DataTypeList__Group__0");
					put(grammarAccess.getDataTypeSetAccess().getGroup(), "rule__DataTypeSet__Group__0");
					put(grammarAccess.getImportCompoundNameAccess().getGroup(), "rule__ImportCompoundName__Group__0");
					put(grammarAccess.getCompoundNameAccess().getGroup(), "rule__CompoundName__Group__0");
					put(grammarAccess.getCompoundNameAccess().getGroup_1(), "rule__CompoundName__Group_1__0");
					put(grammarAccess.getLedsCodeDSLAccess().getProjectAssignment(), "rule__LedsCodeDSL__ProjectAssignment");
					put(grammarAccess.getProjectAccess().getNameAssignment_1(), "rule__Project__NameAssignment_1");
					put(grammarAccess.getProjectAccess().getInfrastructureBlockAssignment_3(), "rule__Project__InfrastructureBlockAssignment_3");
					put(grammarAccess.getProjectAccess().getInterfaceBlockAssignment_4(), "rule__Project__InterfaceBlockAssignment_4");
					put(grammarAccess.getProjectAccess().getApplicationBlockAssignment_5(), "rule__Project__ApplicationBlockAssignment_5");
					put(grammarAccess.getProjectAccess().getDomainBlockAssignment_6(), "rule__Project__DomainBlockAssignment_6");
					put(grammarAccess.getInterfaceBlockAccess().getNameAssignment_1(), "rule__InterfaceBlock__NameAssignment_1");
					put(grammarAccess.getInterfaceBlockAccess().getInterfaceApplicationAssignment_3(), "rule__InterfaceBlock__InterfaceApplicationAssignment_3");
					put(grammarAccess.getInterfaceApplicationAccess().getTypeAssignment_0(), "rule__InterfaceApplication__TypeAssignment_0");
					put(grammarAccess.getInterfaceApplicationAccess().getNameAssignment_1(), "rule__InterfaceApplication__NameAssignment_1");
					put(grammarAccess.getInterfaceApplicationAccess().getNameAppAssignment_3(), "rule__InterfaceApplication__NameAppAssignment_3");
					put(grammarAccess.getInfrastructureBlockAccess().getBasePackageAssignment_4(), "rule__InfrastructureBlock__BasePackageAssignment_4");
					put(grammarAccess.getInfrastructureBlockAccess().getProjectVersionAssignment_7(), "rule__InfrastructureBlock__ProjectVersionAssignment_7");
					put(grammarAccess.getInfrastructureBlockAccess().getLanguageAssignment_11(), "rule__InfrastructureBlock__LanguageAssignment_11");
					put(grammarAccess.getInfrastructureBlockAccess().getFrameworkAssignment_16(), "rule__InfrastructureBlock__FrameworkAssignment_16");
					put(grammarAccess.getInfrastructureBlockAccess().getOrmAssignment_21(), "rule__InfrastructureBlock__OrmAssignment_21");
					put(grammarAccess.getInfrastructureBlockAccess().getDatabaseAssignment_26(), "rule__InfrastructureBlock__DatabaseAssignment_26");
					put(grammarAccess.getDatabaseAccess().getVersionValueAssignment_2(), "rule__Database__VersionValueAssignment_2");
					put(grammarAccess.getDatabaseAccess().getNameValueAssignment_6(), "rule__Database__NameValueAssignment_6");
					put(grammarAccess.getDatabaseAccess().getUserValueAssignment_10(), "rule__Database__UserValueAssignment_10");
					put(grammarAccess.getDatabaseAccess().getPassValueAssignment_14(), "rule__Database__PassValueAssignment_14");
					put(grammarAccess.getDatabaseAccess().getHostValueAssignment_18(), "rule__Database__HostValueAssignment_18");
					put(grammarAccess.getDatabaseAccess().getEnvValueAssignment_22(), "rule__Database__EnvValueAssignment_22");
					put(grammarAccess.getNameVersionAccess().getNameValueAssignment_2(), "rule__NameVersion__NameValueAssignment_2");
					put(grammarAccess.getNameVersionAccess().getVersionValueAssignment_6(), "rule__NameVersion__VersionValueAssignment_6");
					put(grammarAccess.getApplicationBlockAccess().getNameAssignment_1(), "rule__ApplicationBlock__NameAssignment_1");
					put(grammarAccess.getApplicationBlockAccess().getApplicationDomainAssignment_3_1(), "rule__ApplicationBlock__ApplicationDomainAssignment_3_1");
					put(grammarAccess.getDomainBlockAccess().getNameAssignment_1(), "rule__DomainBlock__NameAssignment_1");
					put(grammarAccess.getDomainBlockAccess().getModuleAssignment_3(), "rule__DomainBlock__ModuleAssignment_3");
					put(grammarAccess.getModuleBlockAccess().getNameAssignment_1(), "rule__ModuleBlock__NameAssignment_1");
					put(grammarAccess.getModuleBlockAccess().getServiceBlockAssignment_3_0(), "rule__ModuleBlock__ServiceBlockAssignment_3_0");
					put(grammarAccess.getModuleBlockAccess().getEntityBlockAssignment_3_1(), "rule__ModuleBlock__EntityBlockAssignment_3_1");
					put(grammarAccess.getModuleBlockAccess().getEnumBlockAssignment_3_2(), "rule__ModuleBlock__EnumBlockAssignment_3_2");
					put(grammarAccess.getServiceBlockAccess().getNameAssignment_1(), "rule__ServiceBlock__NameAssignment_1");
					put(grammarAccess.getServiceBlockAccess().getServiceFieldsAssignment_3(), "rule__ServiceBlock__ServiceFieldsAssignment_3");
					put(grammarAccess.getServiceMethodAccess().getNameAssignment_0(), "rule__ServiceMethod__NameAssignment_0");
					put(grammarAccess.getServiceMethodAccess().getMethodAcessAssignment_2(), "rule__ServiceMethod__MethodAcessAssignment_2");
					put(grammarAccess.getEntityBlockAccess().getAcessModifierAssignment_0(), "rule__EntityBlock__AcessModifierAssignment_0");
					put(grammarAccess.getEntityBlockAccess().getIsAbstractAssignment_1(), "rule__EntityBlock__IsAbstractAssignment_1");
					put(grammarAccess.getEntityBlockAccess().getNameAssignment_3(), "rule__EntityBlock__NameAssignment_3");
					put(grammarAccess.getEntityBlockAccess().getClassExtendsAssignment_4(), "rule__EntityBlock__ClassExtendsAssignment_4");
					put(grammarAccess.getEntityBlockAccess().getAttributesAssignment_6(), "rule__EntityBlock__AttributesAssignment_6");
					put(grammarAccess.getEntityBlockAccess().getRepositoryAssignment_7(), "rule__EntityBlock__RepositoryAssignment_7");
					put(grammarAccess.getAttributeAccess().getAcessModifierAssignment_0(), "rule__Attribute__AcessModifierAssignment_0");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_1(), "rule__Attribute__TypeAssignment_1");
					put(grammarAccess.getAttributeAccess().getNameAssignment_2(), "rule__Attribute__NameAssignment_2");
					put(grammarAccess.getAttributeAccess().getPkAssignment_3_0(), "rule__Attribute__PkAssignment_3_0");
					put(grammarAccess.getAttributeAccess().getUniqueAssignment_3_1_2(), "rule__Attribute__UniqueAssignment_3_1_2");
					put(grammarAccess.getAttributeAccess().getNullableAssignment_3_2_2(), "rule__Attribute__NullableAssignment_3_2_2");
					put(grammarAccess.getAttributeAccess().getMinAssignment_3_3_2(), "rule__Attribute__MinAssignment_3_3_2");
					put(grammarAccess.getAttributeAccess().getMaxAssignment_3_4_2(), "rule__Attribute__MaxAssignment_3_4_2");
					put(grammarAccess.getAttributeAccess().getMinAssignment_3_5_2(), "rule__Attribute__MinAssignment_3_5_2");
					put(grammarAccess.getAttributeAccess().getMaxAssignment_3_5_4(), "rule__Attribute__MaxAssignment_3_5_4");
					put(grammarAccess.getRepositoryAccess().getNameAssignment_1(), "rule__Repository__NameAssignment_1");
					put(grammarAccess.getRepositoryAccess().getMethodsAssignment_3(), "rule__Repository__MethodsAssignment_3");
					put(grammarAccess.getRepositoryFieldsAccess().getNameMethodAssignment_0(), "rule__RepositoryFields__NameMethodAssignment_0");
					put(grammarAccess.getRepositoryFieldsAccess().getMethodsParametersAssignment_2(), "rule__RepositoryFields__MethodsParametersAssignment_2");
					put(grammarAccess.getRepositoryFieldsAccess().getReturnTypeAssignment_5(), "rule__RepositoryFields__ReturnTypeAssignment_5");
					put(grammarAccess.getEnumBlockAccess().getNameAssignment_1(), "rule__EnumBlock__NameAssignment_1");
					put(grammarAccess.getEnumBlockAccess().getValuesAssignment_3(), "rule__EnumBlock__ValuesAssignment_3");
					put(grammarAccess.getEnumBlockAccess().getValuesAssignment_4_1(), "rule__EnumBlock__ValuesAssignment_4_1");
					put(grammarAccess.getMethodParameterAccess().getTypeAndAttrAssignment_0(), "rule__MethodParameter__TypeAndAttrAssignment_0");
					put(grammarAccess.getMethodParameterAccess().getTypeAndAttrAssignment_1_1(), "rule__MethodParameter__TypeAndAttrAssignment_1_1");
					put(grammarAccess.getTypeAndAttributeAccess().getTypeAssignment_0(), "rule__TypeAndAttribute__TypeAssignment_0");
					put(grammarAccess.getTypeAndAttributeAccess().getNameAssignment_1(), "rule__TypeAndAttribute__NameAssignment_1");
					put(grammarAccess.getExtendBlockAccess().getValuesAssignment_1(), "rule__ExtendBlock__ValuesAssignment_1");
					put(grammarAccess.getExtendBlockAccess().getValuesAssignment_2_1(), "rule__ExtendBlock__ValuesAssignment_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			br.edu.sr.ifes.leds.ui.contentassist.antlr.internal.InternalLedsCodeV001Parser typedParser = (br.edu.sr.ifes.leds.ui.contentassist.antlr.internal.InternalLedsCodeV001Parser) parser;
			typedParser.entryRuleLedsCodeDSL();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public LedsCodeV001GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(LedsCodeV001GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
